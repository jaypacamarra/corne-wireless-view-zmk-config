/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        conditional_layers {
            compatible = "zmk,conditional-layers";
            tri_layer {
                if-layers = <1 2>;
                then-layer = <3>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T           &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
   &kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G           &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
   &kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B           &kp N    &kp M  &kp COMMA  &kp ESC  &kp DOT   &kp FSLH
                            &kp LGUI  &mo 1  &kp SPACE       &kp RET  &mo 2  &kp RALT
                        >;
                };

                lower_layer {
                        bindings = <
   &kp TAB    &kp trans  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp QMARK        &kp N1  &kp N2  &kp N3  &kp trans &kp trans  &kp BT_CLR
   &bt LCTRL  &kp trans  &kp LG(N4)  &kp LG(N5)  &kp LG(N6)  &kp LG(N5)       &kp N4  &kp N5  &kp N6  &kp LT    &GT        &bt BT_SEL 0
   &kp LSHFT  &bt trans  &kp LG(N7)  &kp LG(N8)  &kp LG(N9)  &kp LG(N0)       &kp N7  &kp N8  &kp N9  &kp N0    &trans     &bt BT_SEL 1
                          	         &kp LGUI    &trans      &kp SPACE        &kp RET &trans  &kp RALT
                        >;
                };

                raise_layer {
                        bindings = <
   &kp TAB    &kp BSLH  &kp FSLH   &kp STAR     &kp PIPE   &kp HASH        &kp EXCL  &kp PRCNT  &kp CARET  &kp AMPS   &kp AT    &kp BSPC
   &kp LCTRL  &trans    &kp MINUS  &kp KP_PLUS  &kp EQUAL  &kp DQT         &kp LPAR  &kp RPAR   &kp LBRC   &kp RBRC   &kp SEMI  &kp SQT
   &kp LSHFT  &kp LEFT  &kp DOWN   &kp UP       &kp RIGHT  &trans          &kp LBKT  &kp RBKT   &kp TILDE  &kp GRAVE  &kp DOT   &trans
                    	           &kp LGUI     &trans     &kp SPACE       &kp RET   &trans     &kp RALT
                        >;
                };

                fun_layer {
                        bindings = <
   &trans  &kp C_PP      &kp C_PREV    &kp C_NEXT    &kp C_MUTE    &trans          &trans           &trans     &trans         &trans       &trans  &trans
   &trans  &kp C_BRI_DN  &kp C_BRI_UP  &kp C_VOL_DN  &kp C_VOL_UP  &trans          &kp LC(LS(TAB))  &kp LC(W)  &kp LC(LS(T))  &kp LC(TAB)  &trans  &trans
   &trans  &trans        &trans        &trans        &trans        &trans          &kp PG_UP        &PG_DN     &trans         &trans       &trans  &trans
                                       &LGUI         &trans        &kp SPACE       &kp RET          &trans     &RALT
                        >;
                };
        };
};
