/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    cond_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E     &kp R  &kp T        &kp T    &kp Y  &kp U     &kp I      &kp O    &kp P
&kp LEFT_SHIFT    &kp A  &kp S  &kp D     &kp F  &kp G        &kp G    &kp H  &kp J     &kp K      &kp L    &kp BSPC
&sk LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp B    &kp N  &kp M     &kp COMMA  &kp ESC  &trans
                                &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            bindings = <
&kp TAB         &kp BSLH   &kp FSLH   &trans       &kp PIPE   &kp QMARK    &trans   &trans     &trans     &trans  &trans     &kp BSPC
&kp LEFT_SHIFT  &kp UNDER  &kp MINUS  &kp KP_PLUS  &kp EQUAL  &kp DQT      &trans   &kp LEFT   &kp DOWN   &kp UP  &kp RIGHT  &kp RCTRL
&sk LC(LSHFT)   &trans     &trans     &trans       &trans     &kp SQT      &trans   &kp TILDE  &kp GRAVE  &trans  &kp DOT    &trans
                                      &kp LGUI     &trans     &kp SPACE    &kp RET  &trans     &kp RALT
            >;
        };

        raise_layer {
            bindings = <
&kp TAB           &trans    &trans    &trans    &trans    &trans       &trans   &kp N1  &kp N2    &kp N3  &trans    &trans
&kp LEFT_SHIFT    &kp LBKT  &kp RBKT  &kp LBRC  &kp RBRC  &trans       &trans   &kp N4  &kp N5    &kp N6  &kp SEMI  &kp COLON
&sk LEFT_CONTROL  &trans    &trans    &kp LT    &kp GT    &trans       &trans   &kp N7  &kp N8    &kp N9  &kp N0    &trans
                                      &kp LGUI  &trans    &kp SPACE    &kp RET  &trans  &kp RALT
            >;
        };

        fun_layer {
            bindings = <
&kp TAB           &kp C_PP      &kp C_PREV    &kp C_NEXT    &kp C_MUTE    &bt BT_CLR      &trans   &trans           &trans     &trans         &trans       &trans
&kp LEFT_SHIFT    &kp C_BRI_DN  &kp C_BRI_UP  &kp C_VOL_DN  &kp C_VOL_UP  &bt BT_SEL 0    &trans   &kp LC(LS(TAB))  &kp LC(W)  &kp LC(LS(T))  &kp LC(TAB)  &trans
&sk LEFT_CONTROL  &trans        &trans        &trans        &trans        &bt BT_SEL 1    &trans   &kp PG_UP        &kp PG_DN  &trans         &trans       &caps_word
                                              &kp LGUI      &trans        &kp SPACE       &kp RET  &trans           &kp RALT
            >;
        };
    };
};
